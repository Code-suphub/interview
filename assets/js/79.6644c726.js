(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{360:function(t,v,_){"use strict";_.r(v);var e=_(14),s=Object(e.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"_3-9-既然有-http-协议-为什么还要有-websocket"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-既然有-http-协议-为什么还要有-websocket"}},[t._v("#")]),t._v(" 3.9 既然有 HTTP 协议，为什么还要有 WebSocket？")]),t._v(" "),v("blockquote",[v("p",[t._v("来源：公众号@小白 debug")]),t._v(" "),v("p",[t._v("原文地址："),v("a",{attrs:{href:"https://mp.weixin.qq.com/s/jJNdXMNmXcE8wSE0gbtTAQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("既然有 HTTP 协议，为什么还要有 WebSocket？"),v("OutboundLink")],1)])]),t._v(" "),v("p",[t._v("平时我们打开网页，比如购物网站某宝。都是点一下「列表商品」，跳转一下网页就到了「商品详情」。")]),t._v(" "),v("p",[t._v("从 HTTP 协议的角度来看，就是点一下网页上的某个按钮，"),v("strong",[t._v("前端发一次 HTTP 请求，网站返回一次 HTTP 响应")]),t._v("。这种由客户端主动请求，服务器响应的方式也满足大部分网页的功能场景。")]),t._v(" "),v("p",[t._v("但有没有发现，这种情况下，服务器从来就「不会主动」给客户端发一次消息。就像你喜欢的女生从来不会主动找你一样。")]),t._v(" "),v("p",[t._v("但如果现在，你在刷网页的时候「右下角」突然弹出一个小广告，提示你【一个人在家偷偷才能玩哦】。")]),t._v(" "),v("p",[v("strong",[t._v("求知，好学，勤奋")]),t._v("，这些刻在你 DNA 里的东西都动起来了。")]),t._v(" "),v("p",[t._v("你点开后发现。")]),t._v(" "),v("p",[t._v('长相平平无奇的古某提示你"道士 9 条狗，全服横着走"。')]),t._v(" "),v("p",[t._v('影帝某辉老师跟你说"系兄弟就来砍我"。')]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/b8cca4b1291f25235bc8df3dddbb6da3.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("来都来了，你就选了个角色进到了游戏界面里。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/95e5b4cee384b182d0e604378c3ca00a.jpeg",alt:"图片"}})]),t._v(" "),v("p",[t._v("这时候，上来就是一个小怪，从远处走来，然后疯狂拿木棒子抽你。")]),t._v(" "),v("p",[v("strong",[t._v("你全程没点任何一次鼠标")]),t._v("。服务器就自动将怪物的移动数据和攻击数据源源不断发给你了。")]),t._v(" "),v("p",[t._v("这…….太暖心了。")]),t._v(" "),v("p",[t._v("感动之余，问题就来了：")]),t._v(" "),v("p",[t._v("像这种"),v("strong",[t._v("看起来服务器主动发消息给客户端的场景")]),t._v("，是怎么做到的？")]),t._v(" "),v("p",[t._v("在真正回答这个问题之前，我们先来聊下一些相关的知识背景。")]),t._v(" "),v("h2",{attrs:{id:"使用-http-不断轮询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用-http-不断轮询"}},[t._v("#")]),t._v(" 使用 HTTP 不断轮询")]),t._v(" "),v("p",[t._v("其实问题的痛点在于，"),v("strong",[t._v("怎么样才能在用户不做任何操作的情况下，网页能收到消息并发生变更。")])]),t._v(" "),v("p",[t._v("最常见的解决方案是，"),v("strong",[t._v("网页的前端代码里不断定时发 HTTP 请求到服务器，服务器收到请求后给客户端响应消息。")])]),t._v(" "),v("p",[t._v("这其实时一种「"),v("strong",[t._v("伪")]),t._v("」服务器推的形式。")]),t._v(" "),v("p",[t._v("它其实并不是服务器主动发消息到客户端，而是客户端自己不断偷偷请求服务器，只是用户无感知而已。")]),t._v(" "),v("p",[t._v("用这种方式的场景也有很多，最常见的就是"),v("strong",[t._v("扫码登录")]),t._v("。")]),t._v(" "),v("p",[t._v("比如，某信公众号平台，登录页面二维码出现之后，"),v("strong",[t._v("前端")]),t._v("网页根本不知道用户扫没扫，于是不断去向"),v("strong",[t._v("后端")]),t._v("服务器询问，看有没有人扫过这个码。而且是以大概 1 到 2 秒的间隔去不断发出请求，这样可以保证用户在扫码后能在 1 到 2 秒内得到及时的反馈，不至于"),v("strong",[t._v("等太久")]),t._v("。")]),t._v(" "),v("h2",{attrs:{id:"使用-http-定时轮询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用-http-定时轮询"}},[t._v("#")]),t._v(" 使用 HTTP 定时轮询")]),t._v(" "),v("p",[t._v("但这样，会有两个比较明显的问题：")]),t._v(" "),v("ul",[v("li",[t._v("当你打开 F12 页面时，你会发现满屏的 HTTP 请求。虽然很小，但这其实也消耗带宽，同时也会增加下游服务器的负担。")]),t._v(" "),v("li",[t._v("最坏情况下，用户在扫码后，需要等个 1~2 秒，正好才触发下一次 HTTP 请求，然后才跳转页面，用户会感到"),v("strong",[t._v("明显的卡顿")]),t._v("。")])]),t._v(" "),v("p",[t._v("使用起来的体验就是，二维码出现后，手机扫一扫，然后在手机上点个确认，这时候"),v("strong",[t._v("卡顿等个 1~2 秒")]),t._v("，页面才跳转。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/5e0e0e25e8aca80812c9a2892032111c.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("那么问题又来了，"),v("strong",[t._v("有没有更好的解决方案？")])]),t._v(" "),v("p",[t._v("有，而且实现起来成本还非常低。")]),t._v(" "),v("h2",{attrs:{id:"长轮询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#长轮询"}},[t._v("#")]),t._v(" 长轮询")]),t._v(" "),v("p",[t._v("我们知道，HTTP 请求发出后，一般会给服务器留一定的时间做响应，比如 3 秒，规定时间内没返回，就认为是超时。")]),t._v(" "),v("p",[t._v("如果我们的 HTTP 请求"),v("strong",[t._v("将超时设置的很大")]),t._v("，比如 30 秒，"),v("strong",[t._v("在这 30 秒内只要服务器收到了扫码请求，就立马返回给客户端网页。如果超时，那就立马发起下一次请求。")])]),t._v(" "),v("p",[t._v("这样就减少了 HTTP 请求的个数，并且由于大部分情况下，用户都会在某个 30 秒的区间内做扫码操作，所以响应也是及时的。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/1058a96ba35215c0f30accc3ff5bb824.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("比如，某度云网盘就是这么干的。所以你会发现一扫码，手机上点个确认，电脑端网页就"),v("strong",[t._v("秒跳转")]),t._v("，体验很好。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/a3a8c95b97d2bac26cfab123a4da68b2.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("像这种发起一个请求，在较长时间内等待服务器响应的机制，就是所谓的"),v("strong",[t._v("长轮询机制")]),t._v("。我们常用的消息队列 RocketMQ 中，消费者去取数据时，也用到了这种方式。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/6173c1d25abc914ef17ee9e534ed6a5f.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("像这种，在用户不感知的情况下，服务器将数据推送给浏览器的技术，就是所谓的"),v("strong",[t._v("服务器推送")]),t._v("技术，它还有个毫不沾边的英文名，"),v("strong",[t._v("comet")]),t._v(" 技术，大家听过就好。")]),t._v(" "),v("p",[t._v("上面提到的两种解决方案（不断轮询和长轮询），本质上，其实还是客户端主动去取数据。")]),t._v(" "),v("p",[t._v("对于像扫码登录这样的"),v("strong",[t._v("简单场景")]),t._v("还能用用。但如果是网页游戏呢，游戏一般会有大量的数据需要从服务器主动推送到客户端。")]),t._v(" "),v("p",[t._v("这就得说下 "),v("strong",[t._v("WebSocket")]),t._v(" 了。")]),t._v(" "),v("h2",{attrs:{id:"websocket-是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#websocket-是什么"}},[t._v("#")]),t._v(" WebSocket 是什么")]),t._v(" "),v("p",[t._v("我们知道 TCP 连接的两端，"),v("strong",[t._v("同一时间里")]),t._v("，"),v("strong",[t._v("双方")]),t._v("都可以"),v("strong",[t._v("主动")]),t._v("向对方发送数据。这就是所谓的"),v("strong",[t._v("全双工")]),t._v("。")]),t._v(" "),v("p",[t._v("而现在使用最广泛的 "),v("code",[t._v("HTTP/1.1")]),t._v("，也是基于 TCP 协议的，"),v("strong",[t._v("同一时间里")]),t._v("，客户端和服务器"),v("strong",[t._v("只能有一方主动")]),t._v("发数据，这就是所谓的"),v("strong",[t._v("半双工")]),t._v("。")]),t._v(" "),v("p",[t._v("也就是说，好好的全双工 TCP，被 HTTP/1.1 用成了半双工。")]),t._v(" "),v("p",[t._v("为什么？")]),t._v(" "),v("p",[t._v("这是由于 HTTP 协议设计之初，考虑的是看看网页文本的场景，能做到"),v("strong",[t._v("客户端发起请求再由服务器响应")]),t._v("，就够了，根本就没考虑网页游戏这种，客户端和服务器之间都要互相主动发大量数据的场景。")]),t._v(" "),v("p",[t._v("所以，为了更好的支持这样的场景，我们需要另外一个"),v("strong",[t._v("基于 TCP 的新协议")]),t._v("。")]),t._v(" "),v("p",[t._v("于是新的应用层协议 "),v("strong",[t._v("WebSocket")]),t._v(" 就被设计出来了。")]),t._v(" "),v("p",[t._v("大家别被这个名字给带偏了。虽然名字带了个 socket，但其实 "),v("strong",[t._v("socket 和 WebSocket 之间，就跟雷峰和雷峰塔一样，二者接近毫无关系")]),t._v("。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/3bbe4c5db972513f912d30ba8cbddd65.png",alt:"图片"}})]),t._v(" "),v("h3",{attrs:{id:"怎么建立-websocket-连接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#怎么建立-websocket-连接"}},[t._v("#")]),t._v(" 怎么建立 WebSocket 连接")]),t._v(" "),v("p",[t._v("我们平时刷网页，一般都是在浏览器上刷的，一会刷刷图文，这时候用的是 "),v("strong",[t._v("HTTP 协议")]),t._v("，一会打开网页游戏，这时候就得切换成我们新介绍的 "),v("strong",[t._v("WebSocket 协议")]),t._v("。")]),t._v(" "),v("p",[t._v("为了兼容这些使用场景。浏览器在 "),v("strong",[t._v("TCP 三次握手")]),t._v("建立连接之后，都"),v("strong",[t._v("统一使用 HTTP 协议")]),t._v("先进行一次通信。")]),t._v(" "),v("ul",[v("li",[t._v("如果此时是"),v("strong",[t._v("普通的 HTTP 请求")]),t._v("，那后续双方就还是老样子继续用普通 HTTP 协议进行交互，这点没啥疑问。")]),t._v(" "),v("li",[t._v("如果这时候是"),v("strong",[t._v("想建立 WebSocket 连接")]),t._v("，就会在 HTTP 请求里带上一些"),v("strong",[t._v("特殊的 header 头")]),t._v("，如下：")])]),t._v(" "),v("div",{staticClass:"language-http line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-http"}},[v("code",[v("span",{pre:!0,attrs:{class:"token header"}},[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Connection")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Upgrade")])]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token header"}},[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Upgrade")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("WebSocket")])]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token header"}},[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Sec-WebSocket-Key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("T2a6wZlAwhgQNqruZ2YUyg==\\r\\n")])]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br")])]),v("p",[t._v("这些 header 头的意思是，浏览器想"),v("strong",[t._v("升级协议（Connection: Upgrade）")]),t._v("，并且"),v("strong",[t._v("想升级成 WebSocket 协议（Upgrade: WebSocket）")]),t._v("。同时带上一段"),v("strong",[t._v("随机生成的 Base64 码（Sec-WebSocket-Key）")]),t._v("，发给服务器。")]),t._v(" "),v("p",[t._v("如果服务器正好支持升级成 WebSocket 协议。就会走 WebSocket 握手流程，同时根据客户端生成的 Base64 码，用某个"),v("strong",[t._v("公开的")]),t._v("算法变成另一段字符串，放在 HTTP 响应的 "),v("code",[t._v("Sec-WebSocket-Accept")]),t._v(" 头里，同时带上 "),v("code",[t._v("101 状态码")]),t._v("，发回给浏览器。HTTP 的响应如下：")]),t._v(" "),v("div",{staticClass:"language-http line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-http"}},[v("code",[v("span",{pre:!0,attrs:{class:"token response-status"}},[v("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token status-code number"}},[t._v("101")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token reason-phrase string"}},[t._v("Switching Protocols\\r\\n")])]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token header"}},[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Sec-WebSocket-Accept")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("iBJKv/ALIW2DobfoA4dmr3JHBCY=\\r\\n")])]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token header"}},[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Upgrade")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("WebSocket\\r\\n")])]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token header"}},[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Connection")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Upgrade\\r\\n")])]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br")])]),v("p",[t._v("HTTP 状态码=200（正常响应）的情况，大家见得多了。101 确实不常见，它其实是指"),v("strong",[t._v("协议切换")]),t._v("。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/dea71991b336c876cae2e1ebdf03b62d.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("之后，浏览器也用同样的"),v("strong",[t._v("公开算法")]),t._v("将 "),v("code",[t._v("Base64 码")]),t._v(" 转成另一段字符串，如果这段字符串跟服务器传回来的"),v("strong",[t._v("字符串一致")]),t._v("，那验证通过。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/117eebe06cc6b35ded3216a95706f080.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("就这样经历了一来一回两次 HTTP 握手，WebSocket 就建立完成了，后续双方就可以使用 WebSocket 的数据格式进行通信了。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/f4edd3018914fe6eb38fad6aa3fd2d65.png",alt:"图片"}})]),t._v(" "),v("h3",{attrs:{id:"websocket-抓包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#websocket-抓包"}},[t._v("#")]),t._v(" WebSocket 抓包")]),t._v(" "),v("p",[t._v("我们可以用 WireShark 抓个包，实际看下数据包的情况。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/f756ca625523f0f9d40a402465179bbe.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("上面这张图，注意画了红框的第 "),v("code",[t._v("2445")]),t._v(" 行报文，是 WebSocket 的"),v("strong",[t._v("第一次握手")]),t._v("，意思是发起了一次带有 "),v("code",[t._v("特殊 Header")]),t._v(" 的 HTTP 请求。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/82d65f08dad05e6b537ea06b94224a5f.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("上面这个图里画了红框的 "),v("code",[t._v("4714")]),t._v(" 行报文，就是服务器在得到第一次握手后，响应的"),v("strong",[t._v("第二次握手")]),t._v("，可以看到这也是个 HTTP 类型的报文，返回的状态码是 101。同时可以看到返回的报文 Header 中也带有各种 "),v("code",[t._v("WebSocket")]),t._v(" 相关的信息，比如 "),v("code",[t._v("Sec-WebSocket-Accept")]),t._v("。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/382c7699530ea7e7b22f60bb68af21bd.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("上面这张图就是全貌了，从截图上的注释可以看出，WebSocket 和 HTTP 一样都是基于 TCP 的协议。"),v("strong",[t._v("经历了三次 TCP 握手之后，利用 HTTP 协议升级为 WebSocket 协议")]),t._v("。")]),t._v(" "),v("p",[t._v("你在网上可能会看到一种说法：“WebSocket 是基于 HTTP 的新协议”，"),v("strong",[t._v("其实这并不对")]),t._v("，因为 WebSocket 只有在建立连接时才用到了 HTTP，"),v("strong",[t._v("升级完成之后就跟 HTTP 没有任何关系了")]),t._v("。")]),t._v(" "),v("p",[t._v("这就好像你喜欢的女生通过你要到了你大学室友的微信，然后他们自己就聊起来了。你能说这个女生是通过你去跟你室友沟通的吗？不能。你跟 HTTP 一样，都只是个"),v("strong",[t._v("工具人")]),t._v("。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/2e9d4b1652bdfa1e3ae4bb24f70a1b5a.png",alt:"图片"}})]),t._v(" "),v("p",[t._v('这就有点"'),v("strong",[t._v("借壳生蛋")]),t._v('"的那意思。')]),t._v(" "),v("h2",{attrs:{id:"http-和-websocket-的关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-和-websocket-的关系"}},[t._v("#")]),t._v(" HTTP 和 WebSocket 的关系")]),t._v(" "),v("h3",{attrs:{id:"websocket-的消息格式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#websocket-的消息格式"}},[t._v("#")]),t._v(" WebSocket 的消息格式")]),t._v(" "),v("p",[t._v("上面提到在完成协议升级之后，两端就会用 WebSocket 的数据格式进行通信。")]),t._v(" "),v("p",[t._v("数据包在 WebSocket 中被叫做"),v("strong",[t._v("帧")]),t._v("，我们来看下它的数据格式长什么样子。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/3a63a86e5d7e72a37b9828fc6e65c21f.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("这里面字段很多，但我们只需要关注下面这几个。")]),t._v(" "),v("p",[v("strong",[t._v("opcode 字段")]),t._v("：这个是用来标志这是个"),v("strong",[t._v("什么类型")]),t._v("的数据帧。比如。")]),t._v(" "),v("ul",[v("li",[t._v("等于 1，是指 text 类型（"),v("code",[t._v("string")]),t._v("）的数据包")]),t._v(" "),v("li",[t._v("等于 2，是二进制数据类型（"),v("code",[t._v("[]byte")]),t._v("）的数据包")]),t._v(" "),v("li",[t._v("等于 8，是关闭连接的信号")])]),t._v(" "),v("p",[v("strong",[t._v("payload 字段")]),t._v("：存放的是我们"),v("strong",[t._v("真正想要传输的数据的长度")]),t._v("，单位是"),v("strong",[t._v("字节")]),t._v("。比如你要发送的数据是 "),v("code",[t._v('字符串"111"')]),t._v("，那它的长度就是 "),v("code",[t._v("3")]),t._v("。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/437a076935f82be1d36960c9a4785fbd.png",alt:"图片"}})]),t._v(" "),v("p",[t._v("另外，可以看到，我们存放"),v("strong",[t._v("payload 长度的字段有好几个")]),t._v("，我们既可以用最前面的 "),v("code",[t._v("7 bit")]),t._v(", 也可以用后面的 "),v("code",[t._v("7+16 bit")]),t._v(" 或 "),v("code",[t._v("7+64 bit")]),t._v("。")]),t._v(" "),v("p",[t._v("那么问题就来了。")]),t._v(" "),v("p",[t._v("我们知道，在数据层面，大家都是 01 二进制流。我怎么知道"),v("strong",[t._v("什么情况下应该读 7 bit，什么情况下应该读 7+16 bit 呢？")])]),t._v(" "),v("p",[t._v("WebSocket 会用最开始的 7 bit 做标志位。不管接下来的数据有多大，都"),v("strong",[t._v("先读最先的 7 个 bit")]),t._v("，根据它的取值决定还要不要再读个 16 bit 或 64 bit。")]),t._v(" "),v("ul",[v("li",[t._v("如果 "),v("code",[t._v("最开始的 7 bit")]),t._v(" 的值是 0~125，那么它就表示了 "),v("strong",[t._v("payload 全部长度")]),t._v("，只读最开始的 "),v("code",[t._v("7 个 bit")]),t._v(" 就完事了。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/690f5a4deda2de50f3a35eddf0be4d75.png",alt:"图片"}})]),t._v(" "),v("ul",[v("li",[t._v("如果是 "),v("code",[t._v("126（0x7E）")]),t._v("。那它表示 payload 的长度范围在 "),v("code",[t._v("126~65535")]),t._v(" 之间，接下来还需要"),v("strong",[t._v("再读 16 bit")]),t._v("。这 16 bit 会包含 payload 的真实长度。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/c815c9dabc02fceb42a98c762705af33.png",alt:"图片"}})]),t._v(" "),v("ul",[v("li",[t._v("如果是 "),v("code",[t._v("127（0x7F）")]),t._v("。那它表示 payload 的长度范围 "),v("code",[t._v(">=65536")]),t._v("，接下来还需要"),v("strong",[t._v("再读 64 bit")]),t._v("。这 64 bit 会包含 payload 的长度。这能放 2 的 64 次方 byte 的数据，换算一下好多个 TB，肯定够用了。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/192b22b4fe46e8dfb7b17549306d5998.png",alt:"图片"}})]),t._v(" "),v("p",[v("strong",[t._v("payload data 字段")]),t._v("：这里存放的就是真正要传输的数据，在知道了上面的 payload 长度后，就可以根据这个值去截取对应的数据。")]),t._v(" "),v("p",[t._v("大家有没有发现一个小细节，WebSocket 的数据格式也是"),v("strong",[t._v("数据头（内含 payload 长度） + payload data")]),t._v(" 的形式。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/d449242f1bf41c6f95a5314ec8311d0d.jpeg",alt:"图片"}})]),t._v(" "),v("p",[t._v("这是因为 TCP 协议本身就是全双工，但直接使用"),v("strong",[t._v("纯裸 TCP")]),t._v(" 去传输数据，会有"),v("strong",[t._v("粘包")]),t._v('的"问题"。为了解决这个问题，上层协议一般会用'),v("strong",[t._v("消息头 + 消息体")]),t._v("的格式去重新包装要发的数据。")]),t._v(" "),v("p",[t._v("而"),v("strong",[t._v("消息头")]),t._v("里一般含有"),v("strong",[t._v("消息体的长度")]),t._v("，通过这个长度可以去截取真正的消息体。")]),t._v(" "),v("p",[t._v("HTTP 协议和大部分 RPC 协议，以及我们今天介绍的 WebSocket 协议，都是这样设计的。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/b91fedb1856897c231b8fb5932b7b2d2.png",alt:"图片"}})]),t._v(" "),v("h3",{attrs:{id:"websocket-的使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#websocket-的使用场景"}},[t._v("#")]),t._v(" WebSocket 的使用场景")]),t._v(" "),v("p",[t._v("WebSocket 完美继承了 TCP 协议的"),v("strong",[t._v("全双工")]),t._v("能力，并且还贴心的提供了解决粘包的方案。")]),t._v(" "),v("p",[t._v("它适用于"),v("strong",[t._v("需要服务器和客户端（浏览器）频繁交互")]),t._v("的大部分场景，比如网页/小程序游戏，网页聊天室，以及一些类似飞书这样的网页协同办公软件。")]),t._v(" "),v("p",[t._v("回到文章开头的问题，在使用 WebSocket 协议的网页游戏里，怪物移动以及攻击玩家的行为是"),v("strong",[t._v("服务器逻辑")]),t._v("产生的，对玩家产生的伤害等数据，都需要由"),v("strong",[t._v("服务器主动发送给客户端")]),t._v("，客户端获得数据后展示对应的效果。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/31410d2e885aab55c2c588aad754bb5c.png",alt:"图片"}})]),t._v(" "),v("h2",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("ul",[v("li",[t._v("TCP 协议本身是"),v("strong",[t._v("全双工")]),t._v("的，但我们最常用的 HTTP/1.1，虽然是基于 TCP 的协议，但它是"),v("strong",[t._v("半双工")]),t._v("的，对于大部分需要服务器主动推送数据到客户端的场景，都不太友好，因此我们需要使用支持全双工的 WebSocket 协议。")]),t._v(" "),v("li",[t._v("在 HTTP/1.1 里，只要客户端不问，服务端就不答。基于这样的特点，对于登录页面这样的简单场景，可以使用"),v("strong",[t._v("定时轮询或者长轮询")]),t._v("的方式实现"),v("strong",[t._v("服务器推送")]),t._v("(comet) 的效果。")]),t._v(" "),v("li",[t._v("对于客户端和服务端之间需要频繁交互的复杂场景，比如网页游戏，都可以考虑使用 WebSocket 协议。")]),t._v(" "),v("li",[t._v("WebSocket 和 socket 几乎没有任何关系，只是叫法相似。")]),t._v(" "),v("li",[t._v("正因为各个浏览器都支持 HTTP 协议，所以 WebSocket 会先利用 HTTP 协议加上一些特殊的 Header 头进行握手升级操作，升级成功后就跟 HTTP 没有任何关系了，之后就用 WebSocket 的数据格式进行收发数据。")])]),t._v(" "),v("hr"),t._v(" "),v("p",[v("em",[v("strong",[t._v("哈喽，我是小林，就爱图解计算机基础，如果觉得文章对你有帮助，欢迎微信搜索「小林 coding」关注我")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost3@main/%E5%85%B6%E4%BB%96/%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BB%8B%E7%BB%8D.png",alt:"img"}})])])}),[],!1,null,null,null);v.default=s.exports}}]);