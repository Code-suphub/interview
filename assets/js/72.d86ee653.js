(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{353:function(v,_,o){"use strict";o.r(_);var t=o(14),E=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"_2-2-键入网址到网页显示-期间发生了什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-键入网址到网页显示-期间发生了什么"}},[v._v("#")]),v._v(" 2.2 键入网址到网页显示，期间发生了什么？")]),v._v(" "),_("p",[v._v("想必不少小伙伴面试过程中，会遇到「"),_("strong",[v._v("当键入网址后，到网页显示，其间发生了什么")]),v._v("」的面试题。")]),v._v(" "),_("p",[v._v("还别说，这问题真挺常问的，前几天坐在我旁边的主管电话面试应聘者的时候，也问了这个问题。")]),v._v(" "),_("p",[v._v("接下来以下图较简单的网络拓扑模型作为例子，探究探究其间发生了什么？")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/2.jpg",alt:"简单的网络模型"}})]),v._v(" "),_("h2",{attrs:{id:"孤单小弟-http"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#孤单小弟-http"}},[v._v("#")]),v._v(" 孤单小弟 —— HTTP")]),v._v(" "),_("blockquote",[_("p",[v._v("浏览器做的第一步工作是解析 URL")])]),v._v(" "),_("p",[v._v("首先浏览器做的第一步工作就是要对 "),_("code",[v._v("URL")]),v._v(" 进行解析，从而生成发送给 "),_("code",[v._v("Web")]),v._v(" 服务器的请求信息。")]),v._v(" "),_("p",[v._v("让我们看看一条长长的 URL 里的各个元素的代表什么，见下图：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/3.jpg",alt:"URL 解析"}})]),v._v(" "),_("p",[v._v("所以图中的长长的 URL 实际上是请求服务器里的文件资源。")]),v._v(" "),_("blockquote",[_("p",[v._v("要是上图中的蓝色部分 URL 元素都省略了，那应该是请求哪个文件呢？")])]),v._v(" "),_("p",[v._v("当没有路径名时，就代表访问根目录下事先设置的"),_("strong",[v._v("默认文件")]),v._v("，也就是 "),_("code",[v._v("/index.html")]),v._v(" 或者 "),_("code",[v._v("/default.html")]),v._v(" 这些文件，这样就不会发生混乱了。")]),v._v(" "),_("blockquote",[_("p",[v._v("生产 HTTP 请求信息")])]),v._v(" "),_("p",[v._v("对 "),_("code",[v._v("URL")]),v._v(" 进行解析之后，浏览器确定了 Web 服务器和文件名，接下来就是根据这些信息来生成 HTTP 请求消息了。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/4.jpg",alt:"HTTP 的消息格式"}})]),v._v(" "),_("blockquote",[_("p",[v._v("一个孤单 HTTP 数据包表示：“我这么一个小小的数据包，没亲没友，直接发到浩瀚的网络，谁会知道我呢？谁能载我一程呢？谁能保护我呢？我的目的地在哪呢？”充满各种疑问的它，没有停滞不前，依然踏上了征途！")])]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"真实地址查询-dns"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#真实地址查询-dns"}},[v._v("#")]),v._v(" 真实地址查询 —— DNS")]),v._v(" "),_("p",[v._v("通过浏览器解析 URL 并生成 HTTP 消息后，需要委托操作系统将消息发送给 "),_("code",[v._v("Web")]),v._v("  服务器。")]),v._v(" "),_("p",[v._v("但在发送之前，还有一项工作需要完成，那就是"),_("strong",[v._v("查询服务器域名对应的 IP 地址")]),v._v("，因为委托操作系统发送消息时，必须提供通信对象的 IP 地址。")]),v._v(" "),_("p",[v._v("比如我们打电话的时候，必须要知道对方的电话号码，但由于电话号码难以记忆，所以通常我们会将对方电话号 + 姓名保存在通讯录里。")]),v._v(" "),_("p",[v._v("所以，有一种服务器就专门保存了 "),_("code",[v._v("Web")]),v._v(" 服务器域名与 "),_("code",[v._v("IP")]),v._v(" 的对应关系，它就是 "),_("code",[v._v("DNS")]),v._v(" 服务器。")]),v._v(" "),_("blockquote",[_("p",[v._v("域名的层级关系")])]),v._v(" "),_("p",[v._v("DNS 中的域名都是用"),_("strong",[v._v("句点")]),v._v("来分隔的，比如 "),_("code",[v._v("www.server.com")]),v._v("，这里的句点代表了不同层次之间的"),_("strong",[v._v("界限")]),v._v("。")]),v._v(" "),_("p",[v._v("在域名中，"),_("strong",[v._v("越靠右")]),v._v("的位置表示其层级"),_("strong",[v._v("越高")]),v._v("。")]),v._v(" "),_("p",[v._v("毕竟域名是外国人发明，所以思维和中国人相反，比如说一个城市地点的时候，外国喜欢从小到大的方式顺序说起（如 XX 街道 XX 区 XX 市 XX 省），而中国则喜欢从大到小的顺序（如 XX 省 XX 市 XX 区 XX 街道）。")]),v._v(" "),_("p",[v._v("实际上域名最后还有一个点，比如 "),_("code",[v._v("www.server.com.")]),v._v("，这个最后的一个点代表根域名。")]),v._v(" "),_("p",[v._v("也就是，"),_("code",[v._v(".")]),v._v(" 根域是在最顶层，它的下一层就是 "),_("code",[v._v(".com")]),v._v(" 顶级域，再下面是 "),_("code",[v._v("server.com")]),v._v("。")]),v._v(" "),_("p",[v._v("所以域名的层级关系类似一个树状结构：")]),v._v(" "),_("ul",[_("li",[v._v("根 DNS 服务器（.）")]),v._v(" "),_("li",[v._v("顶级域 DNS 服务器（.com）")]),v._v(" "),_("li",[v._v("权威 DNS 服务器（server.com）")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/5.jpg",alt:"DNS 树状结构"}})]),v._v(" "),_("p",[v._v("根域的 DNS 服务器信息保存在互联网中所有的 DNS 服务器中。")]),v._v(" "),_("p",[v._v("这样一来，任何 DNS 服务器就都可以找到并访问根域 DNS 服务器了。")]),v._v(" "),_("p",[v._v("因此，客户端只要能够找到任意一台 DNS 服务器，就可以通过它找到根域 DNS 服务器，然后再一路顺藤摸瓜找到位于下层的某台目标 DNS 服务器。")]),v._v(" "),_("blockquote",[_("p",[v._v("域名解析的工作流程")])]),v._v(" "),_("ol",[_("li",[v._v("客户端首先会发出一个 DNS 请求，问 www.server.com 的 IP 是啥，并发给本地 DNS 服务器（也就是客户端的 TCP/IP 设置中填写的 DNS 服务器地址）。")]),v._v(" "),_("li",[v._v("本地域名服务器收到客户端的请求后，如果缓存里的表格能找到 www.server.com，则它直接返回 IP 地址。如果没有，本地 DNS 会去问它的根域名服务器：“老大，能告诉我 www.server.com 的 IP 地址吗？”根域名服务器是最高层次的，它不直接用于域名解析，但能指明一条道路。")]),v._v(" "),_("li",[v._v("根 DNS 收到来自本地 DNS 的请求后，发现后置是 .com，说：“www.server.com 这个域名归 .com 区域管理”，我把 .com 顶级域名服务器的地址给你，你去问问它吧。”")]),v._v(" "),_("li",[v._v("本地 DNS 收到顶级域名服务器的地址后，发起请求问“老二，你能告诉我 www.server.com  的 IP 地址吗？”")]),v._v(" "),_("li",[v._v("顶级域名服务器说：“我给你负责 www.server.com 区域的权威 DNS 服务器的地址，你去问它应该能问到”。")]),v._v(" "),_("li",[v._v("本地 DNS 于是转向问权威 DNS 服务器：“老三，www.server.com 对应的 IP 是啥呀？”server.com 的权威 DNS 服务器，它是域名解析结果的原出处。为啥叫权威呢？就是我的域名我做主。")]),v._v(" "),_("li",[v._v("权威 DNS 服务器查询后将对应的 IP 地址 X.X.X.X 告诉本地 DNS。")]),v._v(" "),_("li",[v._v("本地 DNS 再将 IP 地址返回客户端，客户端和目标建立连接。")])]),v._v(" "),_("p",[v._v("至此，我们完成了 DNS 的解析过程。现在总结一下，整个过程我画成了一个图。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/6.jpg",alt:"域名解析的工作流程"}})]),v._v(" "),_("p",[v._v("DNS 域名解析的过程蛮有意思的，整个过程就和我们日常生活中找人问路的过程类似，"),_("strong",[v._v("只指路不带路")]),v._v("。")]),v._v(" "),_("blockquote",[_("p",[v._v("那是不是每次解析域名都要经过那么多的步骤呢？")])]),v._v(" "),_("p",[v._v("当然不是了，还有缓存这个东西的嘛。")]),v._v(" "),_("p",[v._v("浏览器会先看自身有没有对这个域名的缓存，如果有，就直接返回，如果没有，就去问操作系统，操作系统也会去看自己的缓存，如果有，就直接返回，如果没有，再去 hosts 文件看，也没有，才会去问「本地 DNS 服务器」。")]),v._v(" "),_("blockquote",[_("p",[v._v("数据包表示：“DNS 老大哥厉害呀，找到了目的地了！我还是很迷茫呀，我要发出去，接下来我需要谁的帮助呢？”")])]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"指南好帮手-协议栈"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指南好帮手-协议栈"}},[v._v("#")]),v._v(" 指南好帮手 —— 协议栈")]),v._v(" "),_("p",[v._v("通过 DNS 获取到 IP 后，就可以把 HTTP 的传输工作交给操作系统中的"),_("strong",[v._v("协议栈")]),v._v("。")]),v._v(" "),_("p",[v._v("协议栈的内部分为几个部分，分别承担不同的工作。上下关系是有一定的规则的，上面的部分会向下面的部分委托工作，下面的部分收到委托的工作并执行。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/7.jpg",alt:""}})]),v._v(" "),_("p",[v._v("应用程序（浏览器）通过调用 Socket 库，来委托协议栈工作。协议栈的上半部分有两块，分别是负责收发数据的 TCP 和 UDP 协议，这两个传输协议会接受应用层的委托执行收发数据的操作。")]),v._v(" "),_("p",[v._v("协议栈的下面一半是用 IP 协议控制网络包收发操作，在互联网上传数据时，数据会被切分成一块块的网络包，而将网络包发送给对方的操作就是由 IP 负责的。")]),v._v(" "),_("p",[v._v("此外 IP 中还包括 "),_("code",[v._v("ICMP")]),v._v(" 协议和 "),_("code",[v._v("ARP")]),v._v(" 协议。")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("ICMP")]),v._v(" 用于告知网络包传送过程中产生的错误以及各种控制信息。")]),v._v(" "),_("li",[_("code",[v._v("ARP")]),v._v(" 用于根据 IP 地址查询相应的以太网 MAC 地址。")])]),v._v(" "),_("p",[v._v("IP 下面的网卡驱动程序负责控制网卡硬件，而最下面的网卡则负责完成实际的收发操作，也就是对网线中的信号执行发送和接收操作。")]),v._v(" "),_("blockquote",[_("p",[v._v("数据包看了这份指南表示：“原来我需要那么多大佬的协助啊，那我先去找找 TCP 大佬！”")])]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"可靠传输-tcp"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#可靠传输-tcp"}},[v._v("#")]),v._v(" 可靠传输 —— TCP")]),v._v(" "),_("p",[v._v("HTTP 是基于 TCP 协议传输的，所以在这我们先了解下 TCP 协议。")]),v._v(" "),_("blockquote",[_("p",[v._v("TCP 包头格式")])]),v._v(" "),_("p",[v._v("我们先看看 TCP 报文头部的格式：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/8.jpg",alt:"TCP 包头格式"}})]),v._v(" "),_("p",[v._v("首先，"),_("strong",[v._v("源端口号")]),v._v("和"),_("strong",[v._v("目标端口")]),v._v("号是不可少的，如果没有这两个端口号，数据就不知道应该发给哪个应用。")]),v._v(" "),_("p",[v._v("接下来有包的"),_("strong",[v._v("序")]),v._v("号，这个是为了解决包乱序的问题。")]),v._v(" "),_("p",[v._v("还有应该有的是"),_("strong",[v._v("确认号")]),v._v("，目的是确认发出去对方是否有收到。如果没有收到就应该重新发送，直到送达，这个是为了解决不丢包的问题。")]),v._v(" "),_("p",[v._v("接下来还有一些"),_("strong",[v._v("状态位")]),v._v("。例如 "),_("code",[v._v("SYN")]),v._v(" 是发起一个连接，"),_("code",[v._v("ACK")]),v._v(" 是回复，"),_("code",[v._v("RST")]),v._v(" 是重新连接，"),_("code",[v._v("FIN")]),v._v(" 是结束连接等。TCP 是面向连接的，因而双方要维护连接的状态，这些带状态位的包的发送，会引起双方的状态变更。")]),v._v(" "),_("p",[v._v("还有一个重要的就是"),_("strong",[v._v("窗口大小")]),v._v("。TCP 要做"),_("strong",[v._v("流量控制")]),v._v("，通信双方各声明一个窗口（缓存大小），标识自己当前能够的处理能力，别发送的太快，撑死我，也别发的太慢，饿死我。")]),v._v(" "),_("p",[v._v("除了做流量控制以外，TCP 还会做"),_("strong",[v._v("拥塞控制")]),v._v("，对于真正的通路堵车不堵车，它无能为力，唯一能做的就是控制自己，也即控制发送的速度。不能改变世界，就改变自己嘛。")]),v._v(" "),_("blockquote",[_("p",[v._v("TCP 传输数据之前，要先三次握手建立连接")])]),v._v(" "),_("p",[v._v("在 HTTP 传输数据之前，首先需要 TCP 建立连接，TCP 连接的建立，通常称为"),_("strong",[v._v("三次握手")]),v._v("。")]),v._v(" "),_("p",[v._v("这个所谓的「连接」，只是双方计算机里维护一个状态机，在连接建立的过程中，双方的状态变化时序图就像这样。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost4/%E7%BD%91%E7%BB%9C/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.drawio.png",alt:"TCP 三次握手"}})]),v._v(" "),_("ul",[_("li",[_("p",[v._v("一开始，客户端和服务端都处于 "),_("code",[v._v("CLOSED")]),v._v(" 状态。先是服务端主动监听某个端口，处于 "),_("code",[v._v("LISTEN")]),v._v(" 状态。")])]),v._v(" "),_("li",[_("p",[v._v("然后客户端主动发起连接 "),_("code",[v._v("SYN")]),v._v("，之后处于 "),_("code",[v._v("SYN-SENT")]),v._v(" 状态。")])]),v._v(" "),_("li",[_("p",[v._v("服务端收到发起的连接，返回 "),_("code",[v._v("SYN")]),v._v("，并且 "),_("code",[v._v("ACK")]),v._v(" 客户端的 "),_("code",[v._v("SYN")]),v._v("，之后处于 "),_("code",[v._v("SYN-RCVD")]),v._v(" 状态。")])]),v._v(" "),_("li",[_("p",[v._v("客户端收到服务端发送的 "),_("code",[v._v("SYN")]),v._v(" 和 "),_("code",[v._v("ACK")]),v._v(" 之后，发送对 "),_("code",[v._v("SYN")]),v._v(" 确认的 "),_("code",[v._v("ACK")]),v._v("，之后处于 "),_("code",[v._v("ESTABLISHED")]),v._v(" 状态，因为它一发一收成功了。")])]),v._v(" "),_("li",[_("p",[v._v("服务端收到 "),_("code",[v._v("ACK")]),v._v(" 的 "),_("code",[v._v("ACK")]),v._v(" 之后，处于 "),_("code",[v._v("ESTABLISHED")]),v._v(" 状态，因为它也一发一收了。")])])]),v._v(" "),_("p",[v._v("所以三次握手目的是"),_("strong",[v._v("保证双方都有发送和接收的能力")]),v._v("。")]),v._v(" "),_("blockquote",[_("p",[v._v("如何查看 TCP 的连接状态？")])]),v._v(" "),_("p",[v._v("TCP 的连接状态查看，在 Linux 可以通过 "),_("code",[v._v("netstat -napt")]),v._v(" 命令查看。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/10.jpg",alt:"TCP 连接状态查看"}})]),v._v(" "),_("blockquote",[_("p",[v._v("TCP 分割数据")])]),v._v(" "),_("p",[v._v("如果 HTTP 请求消息比较长，超过了 "),_("code",[v._v("MSS")]),v._v(" 的长度，这时 TCP 就需要把 HTTP 的数据拆解成一块块的数据发送，而不是一次性发送所有数据。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/11.jpg",alt:"MTU 与 MSS"}})]),v._v(" "),_("ul",[_("li",[_("code",[v._v("MTU")]),v._v("：一个网络包的最大长度，以太网中一般为 "),_("code",[v._v("1500")]),v._v(" 字节。")]),v._v(" "),_("li",[_("code",[v._v("MSS")]),v._v("：除去 IP 和 TCP 头部之后，一个网络包所能容纳的 TCP 数据的最大长度。")])]),v._v(" "),_("p",[v._v("数据会被以 "),_("code",[v._v("MSS")]),v._v(" 的长度为单位进行拆分，拆分出来的每一块数据都会被放进单独的网络包中。也就是在每个被拆分的数据加上 TCP 头信息，然后交给 IP 模块来发送数据。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/12.jpg",alt:"数据包分割"}})]),v._v(" "),_("blockquote",[_("p",[v._v("TCP 报文生成")])]),v._v(" "),_("p",[v._v("TCP 协议里面会有两个端口，一个是浏览器监听的端口（通常是随机生成的），一个是 Web 服务器监听的端口（HTTP 默认端口号是 "),_("code",[v._v("80")]),v._v("，HTTPS 默认端口号是 "),_("code",[v._v("443")]),v._v("）。")]),v._v(" "),_("p",[v._v("在双方建立了连接后，TCP 报文中的数据部分就是存放 HTTP 头部 + 数据，组装好 TCP 报文之后，就需交给下面的网络层处理。")]),v._v(" "),_("p",[v._v("至此，网络包的报文如下图。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/13.jpg",alt:"TCP 层报文"}})]),v._v(" "),_("blockquote",[_("p",[v._v("此时，遇上了 TCP 的  数据包激动表示：“太好了，碰到了可靠传输的 TCP 传输，它给我加上 TCP 头部，我不再孤单了，安全感十足啊！有大佬可以保护我的可靠送达！但我应该往哪走呢？”")])]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"远程定位-ip"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#远程定位-ip"}},[v._v("#")]),v._v(" 远程定位 —— IP")]),v._v(" "),_("p",[v._v("TCP 模块在执行连接、收发、断开等各阶段操作时，都需要委托 IP 模块将数据封装成"),_("strong",[v._v("网络包")]),v._v("发送给通信对象。")]),v._v(" "),_("blockquote",[_("p",[v._v("IP 包头格式")])]),v._v(" "),_("p",[v._v("我们先看看 IP 报文头部的格式：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/14.jpg",alt:"IP 包头格式"}})]),v._v(" "),_("p",[v._v("在 IP 协议里面需要有"),_("strong",[v._v("源地址 IP")]),v._v(" 和 "),_("strong",[v._v("目标地址 IP")]),v._v("：")]),v._v(" "),_("ul",[_("li",[v._v("源地址 IP，即是客户端输出的 IP 地址；")]),v._v(" "),_("li",[v._v("目标地址，即通过 DNS 域名解析得到的 Web 服务器 IP。")])]),v._v(" "),_("p",[v._v("因为 HTTP 是经过 TCP 传输的，所以在 IP 包头的"),_("strong",[v._v("协议号")]),v._v("，要填写为 "),_("code",[v._v("06")]),v._v("（十六进制），表示协议为 TCP。")]),v._v(" "),_("blockquote",[_("p",[v._v("假设客户端有多个网卡，就会有多个 IP 地址，那 IP 头部的源地址应该选择哪个 IP 呢？")])]),v._v(" "),_("p",[v._v("当存在多个网卡时，在填写源地址 IP 时，就需要判断到底应该填写哪个地址。这个判断相当于在多块网卡中判断应该使用哪个一块网卡来发送包。")]),v._v(" "),_("p",[v._v("这个时候就需要根据"),_("strong",[v._v("路由表")]),v._v("规则，来判断哪一个网卡作为源地址 IP。")]),v._v(" "),_("p",[v._v("在 Linux 操作系统，我们可以使用 "),_("code",[v._v("route -n")]),v._v(" 命令查看当前系统的路由表。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/15.jpg",alt:"路由表"}})]),v._v(" "),_("p",[v._v("举个例子，根据上面的路由表，我们假设 Web 服务器的目标地址是 "),_("code",[v._v("192.168.10.200")]),v._v("。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/16.jpg",alt:"路由规则判断"}})]),v._v(" "),_("ol",[_("li",[v._v("首先先和第一条目的子网掩码（"),_("code",[v._v("Genmask")]),v._v("）进行 "),_("strong",[v._v("与运算")]),v._v("，得到结果为 "),_("code",[v._v("192.168.10.0")]),v._v("，但是第一个条目的 "),_("code",[v._v("Destination")]),v._v(" 是 "),_("code",[v._v("192.168.3.0")]),v._v("，两者不一致所以匹配失败。")]),v._v(" "),_("li",[v._v("再与第二条目的子网掩码进行 "),_("strong",[v._v("与运算")]),v._v("，得到的结果为 "),_("code",[v._v("192.168.10.0")]),v._v("，与第二条目的 "),_("code",[v._v("Destination 192.168.10.0")]),v._v(" 匹配成功，所以将使用 "),_("code",[v._v("eth1")]),v._v(" 网卡的 IP 地址作为 IP 包头的源地址。")])]),v._v(" "),_("p",[v._v("那么假设 Web 服务器的目标地址是 "),_("code",[v._v("10.100.20.100")]),v._v("，那么依然依照上面的路由表规则判断，判断后的结果是和第三条目匹配。")]),v._v(" "),_("p",[v._v("第三条目比较特殊，它目标地址和子网掩码都是 "),_("code",[v._v("0.0.0.0")]),v._v("，这表示"),_("strong",[v._v("默认网关")]),v._v("，如果其他所有条目都无法匹配，就会自动匹配这一行。并且后续就把包发给路由器，"),_("code",[v._v("Gateway")]),v._v(" 即是路由器的 IP 地址。")]),v._v(" "),_("blockquote",[_("p",[v._v("IP 报文生成")])]),v._v(" "),_("p",[v._v("至此，网络包的报文如下图。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/17.jpg",alt:"IP 层报文"}})]),v._v(" "),_("blockquote",[_("p",[v._v("此时，加上了 IP 头部的数据包表示：“有 IP 大佬给我指路了，感谢 IP 层给我加上了 IP 包头，让我有了远程定位的能力，不会害怕在浩瀚的互联网迷茫了！可是目的地好远啊，我下一站应该去哪呢？”")])]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"两点传输-mac"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#两点传输-mac"}},[v._v("#")]),v._v(" 两点传输 —— MAC")]),v._v(" "),_("p",[v._v("生成了 IP 头部之后，接下来网络包还需要在 IP 头部的前面加上 "),_("strong",[v._v("MAC 头部")]),v._v("。")]),v._v(" "),_("blockquote",[_("p",[v._v("MAC 包头格式")])]),v._v(" "),_("p",[v._v("MAC 头部是以太网使用的头部，它包含了接收方和发送方的 MAC 地址等信息。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/18.jpg",alt:"MAC 包头格式"}})]),v._v(" "),_("p",[v._v("在 MAC 包头里需要"),_("strong",[v._v("发送方 MAC 地址")]),v._v("和"),_("strong",[v._v("接收方目标 MAC 地址")]),v._v("，用于"),_("strong",[v._v("两点之间的传输")]),v._v("。")]),v._v(" "),_("p",[v._v("一般在 TCP/IP 通信里，MAC 包头的"),_("strong",[v._v("协议类型")]),v._v("只使用：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("0800")]),v._v(" ：IP 协议")]),v._v(" "),_("li",[_("code",[v._v("0806")]),v._v(" ：ARP 协议")])]),v._v(" "),_("blockquote",[_("p",[v._v("MAC 发送方和接收方如何确认？")])]),v._v(" "),_("p",[_("strong",[v._v("发送方")]),v._v("的 MAC 地址获取就比较简单了，MAC 地址是在网卡生产时写入到 ROM 里的，只要将这个值读取出来写入到 MAC 头部就可以了。")]),v._v(" "),_("p",[_("strong",[v._v("接收方")]),v._v("的 MAC 地址就有点复杂了，只要告诉以太网对方的 MAC 的地址，以太网就会帮我们把包发送过去，那么很显然这里应该填写对方的 MAC 地址。")]),v._v(" "),_("p",[v._v("所以先得搞清楚应该把包发给谁，这个只要查一下"),_("strong",[v._v("路由表")]),v._v("就知道了。在路由表中找到相匹配的条目，然后把包发给 "),_("code",[v._v("Gateway")]),v._v(" 列中的 IP 地址就可以了。")]),v._v(" "),_("blockquote",[_("p",[v._v("既然知道要发给谁，那如何获取对方的 MAC 地址呢？")])]),v._v(" "),_("p",[v._v("不知道对方 MAC 地址？不知道就喊呗。")]),v._v(" "),_("p",[v._v("此时就需要 "),_("code",[v._v("ARP")]),v._v(" 协议帮我们找到路由器的 MAC 地址。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/19.jpg",alt:"ARP 广播"}})]),v._v(" "),_("p",[v._v("ARP 协议会在以太网中以"),_("strong",[v._v("广播")]),v._v("的形式，对以太网所有的设备喊出：“这个 IP 地址是谁的？请把你的 MAC 地址告诉我”。")]),v._v(" "),_("p",[v._v("然后就会有人回答：“这个 IP 地址是我的，我的 MAC 地址是 XXXX”。")]),v._v(" "),_("p",[v._v("如果对方和自己处于同一个子网中，那么通过上面的操作就可以得到对方的 MAC 地址。然后，我们将这个 MAC 地址写入 MAC 头部，MAC 头部就完成了。")]),v._v(" "),_("blockquote",[_("p",[v._v("好像每次都要广播获取，这不是很麻烦吗？")])]),v._v(" "),_("p",[v._v("放心，在后续操作系统会把本次查询结果放到一块叫做 "),_("strong",[v._v("ARP 缓存")]),v._v("的内存空间留着以后用，不过缓存的时间就几分钟。")]),v._v(" "),_("p",[v._v("也就是说，在发包时：")]),v._v(" "),_("ul",[_("li",[v._v("先查询 ARP 缓存，如果其中已经保存了对方的 MAC 地址，就不需要发送 ARP 查询，直接使用 ARP 缓存中的地址。")]),v._v(" "),_("li",[v._v("而当 ARP 缓存中不存在对方 MAC 地址时，则发送 ARP 广播查询。")])]),v._v(" "),_("blockquote",[_("p",[v._v("查看 ARP 缓存内容")])]),v._v(" "),_("p",[v._v("在 Linux 系统中，我们可以使用 "),_("code",[v._v("arp -a")]),v._v(" 命令来查看 ARP 缓存的内容。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/20.jpg",alt:"ARP 缓存内容"}})]),v._v(" "),_("blockquote",[_("p",[v._v("MAC 报文生成")])]),v._v(" "),_("p",[v._v("至此，网络包的报文如下图。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/21.jpg",alt:"MAC 层报文"}})]),v._v(" "),_("blockquote",[_("p",[v._v("此时，加上了 MAC 头部的数据包万分感谢，说道：“感谢 MAC 大佬，我知道我下一步要去哪了！我现在有很多头部兄弟，相信我可以到达最终的目的地！”。\n带着众多头部兄弟的数据包，终于准备要出门了。")])]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"出口-网卡"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#出口-网卡"}},[v._v("#")]),v._v(" 出口 —— 网卡")]),v._v(" "),_("p",[v._v("网络包只是存放在内存中的一串二进制数字信息，没有办法直接发送给对方。因此，我们需要将"),_("strong",[v._v("数字信息转换为电信号")]),v._v("，才能在网线上传输，也就是说，这才是真正的数据发送过程。")]),v._v(" "),_("p",[v._v("负责执行这一操作的是"),_("strong",[v._v("网卡")]),v._v("，要控制网卡还需要靠"),_("strong",[v._v("网卡驱动程序")]),v._v("。")]),v._v(" "),_("p",[v._v("网卡驱动获取网络包之后，会将其"),_("strong",[v._v("复制")]),v._v("到网卡内的缓存区中，接着会在其"),_("strong",[v._v("开头加上报头和起始帧分界符，在末尾加上用于检测错误的帧校验序列")]),v._v("。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost4/%E7%BD%91%E7%BB%9C/%E6%95%B0%E6%8D%AE%E5%8C%85.drawio.png",alt:"数据包"}})]),v._v(" "),_("ul",[_("li",[v._v("起始帧分界符是一个用来表示包起始位置的标记")]),v._v(" "),_("li",[v._v("末尾的 "),_("code",[v._v("FCS")]),v._v("（帧校验序列）用来检查包传输过程是否有损坏")])]),v._v(" "),_("p",[v._v("最后网卡会将包转为电信号，通过网线发送出去。")]),v._v(" "),_("blockquote",[_("p",[v._v("唉，真是不容易，发一个包，真是历经千辛万苦。致此，一个带有许多头部的数据终于踏上寻找目的地的征途了！")])]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"送别者-交换机"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#送别者-交换机"}},[v._v("#")]),v._v(" 送别者 —— 交换机")]),v._v(" "),_("p",[v._v("下面来看一下包是如何通过交换机的。交换机的设计是将网络包"),_("strong",[v._v("原样")]),v._v("转发到目的地。交换机工作在 MAC 层，也称为"),_("strong",[v._v("二层网络设备")]),v._v("。")]),v._v(" "),_("blockquote",[_("p",[v._v("交换机的包接收操作")])]),v._v(" "),_("p",[v._v("首先，电信号到达网线接口，交换机里的模块进行接收，接下来交换机里的模块将电信号转换为数字信号。")]),v._v(" "),_("p",[v._v("然后通过包末尾的 "),_("code",[v._v("FCS")]),v._v(" 校验错误，如果没问题则放到缓冲区。这部分操作基本和计算机的网卡相同，但交换机的工作方式和网卡不同。")]),v._v(" "),_("p",[v._v("计算机的网卡本身具有 MAC 地址，并通过核对收到的包的接收方 MAC 地址判断是不是发给自己的，如果不是发给自己的则丢弃；相对地，交换机的端口不核对接收方 MAC 地址，而是直接接收所有的包并存放到缓冲区中。因此，和网卡不同，"),_("strong",[v._v("交换机的端口不具有 MAC 地址")]),v._v("。")]),v._v(" "),_("p",[v._v("将包存入缓冲区后，接下来需要查询一下这个包的接收方 MAC 地址是否已经在 MAC 地址表中有记录了。")]),v._v(" "),_("p",[v._v("交换机的 MAC 地址表主要包含两个信息：")]),v._v(" "),_("ul",[_("li",[v._v("一个是设备的 MAC 地址，")]),v._v(" "),_("li",[v._v("另一个是该设备连接在交换机的哪个端口上。")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/23.jpg",alt:"交换机的 MAC 地址表"}})]),v._v(" "),_("p",[v._v("举个例子，如果收到的包的接收方 MAC 地址为 "),_("code",[v._v("00-02-B3-1C-9C-F9")]),v._v("，则与图中表中的第 3 行匹配，根据端口列的信息，可知这个地址位于 "),_("code",[v._v("3")]),v._v(" 号端口上，然后就可以通过交换电路将包发送到相应的端口了。")]),v._v(" "),_("p",[v._v("所以，"),_("strong",[v._v("交换机根据 MAC 地址表查找 MAC 地址，然后将信号发送到相应的端口")]),v._v("。")]),v._v(" "),_("blockquote",[_("p",[v._v("当 MAC 地址表找不到指定的 MAC 地址会怎么样？")])]),v._v(" "),_("p",[v._v("地址表中找不到指定的 MAC 地址。这可能是因为具有该地址的设备还没有向交换机发送过包，或者这个设备一段时间没有工作导致地址被从地址表中删除了。")]),v._v(" "),_("p",[v._v("这种情况下，交换机无法判断应该把包转发到哪个端口，只能将包转发到除了源端口之外的所有端口上，无论该设备连接在哪个端口上都能收到这个包。")]),v._v(" "),_("p",[v._v("这样做不会产生什么问题，因为以太网的设计本来就是将包发送到整个网络的，然后"),_("strong",[v._v("只有相应的接收者才接收包，而其他设备则会忽略这个包")]),v._v("。")]),v._v(" "),_("p",[v._v("有人会说：“这样做会发送多余的包，会不会造成网络拥塞呢？”")]),v._v(" "),_("p",[v._v("其实完全不用过于担心，因为发送了包之后目标设备会作出响应，只要返回了响应包，交换机就可以将它的地址写入 MAC 地址表，下次也就不需要把包发到所有端口了。")]),v._v(" "),_("p",[v._v("局域网中每秒可以传输上千个包，多出一两个包并无大碍。")]),v._v(" "),_("p",[v._v("此外，如果接收方 MAC 地址是一个"),_("strong",[v._v("广播地址")]),v._v("，那么交换机会将包发送到除源端口之外的所有端口。")]),v._v(" "),_("p",[v._v("以下两个属于广播地址：")]),v._v(" "),_("ul",[_("li",[v._v("MAC 地址中的 "),_("code",[v._v("FF:FF:FF:FF:FF:FF")])]),v._v(" "),_("li",[v._v("IP 地址中的 "),_("code",[v._v("255.255.255.255")])])]),v._v(" "),_("blockquote",[_("p",[v._v("数据包通过交换机转发抵达了路由器，准备要离开土生土长的子网了。此时，数据包和交换机离别时说道：“感谢交换机兄弟，帮我转发到出境的大门，我要出远门啦！”")])]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"出境大门-路由器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#出境大门-路由器"}},[v._v("#")]),v._v(" 出境大门 —— 路由器")]),v._v(" "),_("blockquote",[_("p",[v._v("路由器与交换机的区别")])]),v._v(" "),_("p",[v._v("网络包经过交换机之后，现在到达了"),_("strong",[v._v("路由器")]),v._v("，并在此被转发到下一个路由器或目标设备。")]),v._v(" "),_("p",[v._v("这一步转发的工作原理和交换机类似，也是通过查表判断包转发的目标。")]),v._v(" "),_("p",[v._v("不过在具体的操作过程上，路由器和交换机是有区别的。")]),v._v(" "),_("ul",[_("li",[v._v("因为"),_("strong",[v._v("路由器")]),v._v("是基于 IP 设计的，俗称"),_("strong",[v._v("三层")]),v._v("网络设备，路由器的各个端口都具有 MAC 地址和 IP 地址；")]),v._v(" "),_("li",[v._v("而"),_("strong",[v._v("交换机")]),v._v("是基于以太网设计的，俗称"),_("strong",[v._v("二层")]),v._v("网络设备，交换机的端口不具有 MAC 地址。")])]),v._v(" "),_("blockquote",[_("p",[v._v("路由器基本原理")])]),v._v(" "),_("p",[v._v("路由器的端口具有 MAC 地址，因此它就能够成为以太网的发送方和接收方；同时还具有 IP 地址，从这个意义上来说，它和计算机的网卡是一样的。")]),v._v(" "),_("p",[v._v("当转发包时，首先路由器端口会接收发给自己的以太网包，然后"),_("strong",[v._v("路由表")]),v._v("查询转发目标，再由相应的端口作为发送方将以太网包发送出去。")]),v._v(" "),_("blockquote",[_("p",[v._v("路由器的包接收操作")])]),v._v(" "),_("p",[v._v("首先，电信号到达网线接口部分，路由器中的模块会将电信号转成数字信号，然后通过包末尾的 "),_("code",[v._v("FCS")]),v._v(" 进行错误校验。")]),v._v(" "),_("p",[v._v("如果没问题则检查 MAC 头部中的"),_("strong",[v._v("接收方 MAC 地址")]),v._v("，看看是不是发给自己的包，如果是就放到接收缓冲区中，否则就丢弃这个包。")]),v._v(" "),_("p",[v._v("总的来说，路由器的端口都具有 MAC 地址，只接收与自身地址匹配的包，遇到不匹配的包则直接丢弃。")]),v._v(" "),_("blockquote",[_("p",[v._v("查询路由表确定输出端口")])]),v._v(" "),_("p",[v._v("完成包接收操作之后，路由器就会"),_("strong",[v._v("去掉")]),v._v("包开头的 MAC 头部。")]),v._v(" "),_("p",[_("strong",[v._v("MAC 头部的作用就是将包送达路由器")]),v._v("，其中的接收方 MAC 地址就是路由器端口的 MAC 地址。因此，当包到达路由器之后，MAC 头部的任务就完成了，于是 MAC 头部就会"),_("strong",[v._v("被丢弃")]),v._v("。")]),v._v(" "),_("p",[v._v("接下来，路由器会根据 MAC 头部后方的 "),_("code",[v._v("IP")]),v._v(" 头部中的内容进行包的转发操作。")]),v._v(" "),_("p",[v._v("转发操作分为几个阶段，首先是查询"),_("strong",[v._v("路由表")]),v._v("判断转发目标。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/24.jpg",alt:"路由器转发"}})]),v._v(" "),_("p",[v._v("具体的工作流程根据上图，举个例子。")]),v._v(" "),_("p",[v._v("假设地址为 "),_("code",[v._v("10.10.1.101")]),v._v(" 的计算机要向地址为 "),_("code",[v._v("192.168.1.100")]),v._v(" 的服务器发送一个包，这个包先到达图中的路由器。")]),v._v(" "),_("p",[v._v("判断转发目标的第一步，就是根据包的接收方 IP 地址查询路由表中的目标地址栏，以找到相匹配的记录。")]),v._v(" "),_("p",[v._v("路由匹配和前面讲的一样，每个条目的子网掩码和 "),_("code",[v._v("192.168.1.100")]),v._v(" IP 做 "),_("strong",[v._v("& 与运算")]),v._v("后，得到的结果与对应条目的目标地址进行匹配，如果匹配就会作为候选转发目标，如果不匹配就继续与下个条目进行路由匹配。")]),v._v(" "),_("p",[v._v("如第二条目的子网掩码 "),_("code",[v._v("255.255.255.0")]),v._v(" 与 "),_("code",[v._v("192.168.1.100")]),v._v(" IP 做 "),_("strong",[v._v("& 与运算")]),v._v("后，得到结果是 "),_("code",[v._v("192.168.1.0")]),v._v(" ，这与第二条目的目标地址 "),_("code",[v._v("192.168.1.0")]),v._v(" 匹配，该第二条目记录就会被作为转发目标。")]),v._v(" "),_("p",[v._v("实在找不到匹配路由时，就会选择"),_("strong",[v._v("默认路由")]),v._v("，路由表中子网掩码为 "),_("code",[v._v("0.0.0.0")]),v._v(" 的记录表示「默认路由」。")]),v._v(" "),_("blockquote",[_("p",[v._v("路由器的发送操作")])]),v._v(" "),_("p",[v._v("接下来就会进入包的"),_("strong",[v._v("发送操作")]),v._v("。")]),v._v(" "),_("p",[v._v("首先，我们需要根据"),_("strong",[v._v("路由表的网关列")]),v._v("判断对方的地址。")]),v._v(" "),_("ul",[_("li",[v._v("如果网关是一个 IP 地址，则这个 IP 地址就是我们要转发到的目标地址，"),_("strong",[v._v("还未抵达终点")]),v._v("，还需继续需要路由器转发。")]),v._v(" "),_("li",[v._v("如果网关为空，则 IP 头部中的接收方 IP 地址就是要转发到的目标地址，也是就终于找到 IP 包头里的目标地址了，说明"),_("strong",[v._v("已抵达终点")]),v._v("。")])]),v._v(" "),_("p",[v._v("知道对方的 IP 地址之后，接下来需要通过 "),_("code",[v._v("ARP")]),v._v(" 协议根据 IP 地址查询 MAC 地址，并将查询的结果作为接收方 MAC 地址。")]),v._v(" "),_("p",[v._v("路由器也有 ARP 缓存，因此首先会在 ARP 缓存中查询，如果找不到则发送 ARP 查询请求。")]),v._v(" "),_("p",[v._v("接下来是发送方 MAC 地址字段，这里填写输出端口的 MAC 地址。还有一个以太类型字段，填写 "),_("code",[v._v("0800")]),v._v(" （十六进制）表示 IP 协议。")]),v._v(" "),_("p",[v._v("网络包完成后，接下来会将其转换成电信号并通过端口发送出去。这一步的工作过程和计算机也是相同的。")]),v._v(" "),_("p",[v._v("发送出去的网络包会通过"),_("strong",[v._v("交换机")]),v._v("到达下一个路由器。由于接收方 MAC 地址就是下一个路由器的地址，所以交换机会根据这一地址将包传输到下一个路由器。")]),v._v(" "),_("p",[v._v("接下来，下一个路由器会将包转发给再下一个路由器，经过层层转发之后，网络包就到达了最终的目的地。")]),v._v(" "),_("p",[v._v("不知你发现了没有，在网络包传输的过程中，"),_("strong",[v._v("源 IP 和目标 IP 始终是不会变的，一直变化的是 MAC 地址")]),v._v("，因为需要 MAC 地址在以太网内进行"),_("strong",[v._v("两个设备")]),v._v("之间的包传输。")]),v._v(" "),_("blockquote",[_("p",[v._v("数据包通过多个路由器道友的帮助，在网络世界途经了很多路程，最终抵达了目的地的城门！城门值守的路由器，发现了这个小兄弟数据包原来是找城内的人，于是它就将数据包送进了城内，再经由城内的交换机帮助下，最终转发到了目的地了。数据包感慨万千的说道：“多谢这一路上，各路大侠的相助！”")])]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"互相扒皮-服务器-与-客户端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#互相扒皮-服务器-与-客户端"}},[v._v("#")]),v._v(" 互相扒皮 —— 服务器 与 客户端")]),v._v(" "),_("p",[v._v("数据包抵达了服务器，服务器肯定高兴呀，正所谓有朋自远方来，不亦乐乎？")]),v._v(" "),_("p",[v._v("服务器高兴的不得了，于是开始扒数据包的皮！就好像你收到快递，能不兴奋吗？")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E8%BF%87%E7%A8%8B/25.jpg",alt:"网络分层模型"}})]),v._v(" "),_("p",[v._v("数据包抵达服务器后，服务器会先扒开数据包的 MAC 头部，查看是否和服务器自己的 MAC 地址符合，符合就将包收起来。")]),v._v(" "),_("p",[v._v("接着继续扒开数据包的 IP 头，发现 IP 地址符合，根据 IP 头中协议项，知道自己上层是 TCP 协议。")]),v._v(" "),_("p",[v._v("于是，扒开 TCP 的头，里面有序列号，需要看一看这个序列包是不是我想要的，如果是就放入缓存中然后返回一个 ACK，如果不是就丢弃。TCP 头部里面还有端口号，HTTP 的服务器正在监听这个端口号。")]),v._v(" "),_("p",[v._v("于是，服务器自然就知道是 HTTP 进程想要这个包，于是就将包发给 HTTP 进程。")]),v._v(" "),_("p",[v._v("服务器的 HTTP 进程看到，原来这个请求是要访问一个页面，于是就把这个网页封装在 HTTP 响应报文里。")]),v._v(" "),_("p",[v._v("HTTP 响应报文也需要穿上 TCP、IP、MAC 头部，不过这次是源地址是服务器 IP 地址，目的地址是客户端 IP 地址。")]),v._v(" "),_("p",[v._v("穿好头部衣服后，从网卡出去，交由交换机转发到出城的路由器，路由器就把响应数据包发到了下一个路由器，就这样跳啊跳。")]),v._v(" "),_("p",[v._v("最后跳到了客户端的城门把守的路由器，路由器扒开 IP 头部发现是要找城内的人，于是又把包发给了城内的交换机，再由交换机转发到客户端。")]),v._v(" "),_("p",[v._v("客户端收到了服务器的响应数据包后，同样也非常的高兴，客户能拆快递了！")]),v._v(" "),_("p",[v._v("于是，客户端开始扒皮，把收到的数据包的皮扒剩 HTTP 响应报文后，交给浏览器去渲染页面，一份特别的数据包快递，就这样显示出来了！")]),v._v(" "),_("p",[v._v("最后，客户端要离开了，向服务器发起了 TCP 四次挥手，至此双方的连接就断开了。")]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"一个数据包臭不要脸的感受"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一个数据包臭不要脸的感受"}},[v._v("#")]),v._v(" 一个数据包臭不要脸的感受")]),v._v(" "),_("blockquote",[_("p",[v._v("下面内容的「我」，代表「臭美的数据包角色」。注：（括号的内容）代表我的吐槽，三连呸！")])]),v._v(" "),_("p",[v._v("我一开始我虽然孤单、不知所措，但没有停滞不前。我依然满怀信心和勇气开始了征途。（"),_("strong",[v._v("你当然有勇气，你是应用层数据，后面有底层兄弟当靠山，我呸！")]),v._v("）")]),v._v(" "),_("p",[v._v("我很庆幸遇到了各路神通广大的大佬，有可靠传输的 TCP、有远程定位功能的 IP、有指明下一站位置的 MAC 等（"),_("strong",[v._v("你当然会遇到，因为都被计算机安排好的，我呸！")]),v._v("）。")]),v._v(" "),_("p",[v._v("这些大佬都给我前面加上了头部，使得我能在交换机和路由器的转发下，抵达到了目的地！（"),_("strong",[v._v("哎，你也不容易，不吐槽了，放过你！")]),v._v("）")]),v._v(" "),_("p",[v._v("这一路上的经历，让我认识到了网络世界中各路大侠协作的重要性，是他们维护了网络世界的秩序，感谢他们！（"),_("strong",[v._v("我呸，你应该感谢众多计算机科学家！")]),v._v("）")]),v._v(" "),_("hr"),v._v(" "),_("p",[v._v("参考资料")]),v._v(" "),_("p",[v._v("[1] 户根勤。网络是怎么连接的。人民邮电出版社。")]),v._v(" "),_("p",[v._v("[2] 刘超。趣谈网络协议。极客时间。")]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"读者问答"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#读者问答"}},[v._v("#")]),v._v(" 读者问答")]),v._v(" "),_("blockquote",[_("p",[v._v("读者问：“笔记本的是自带交换机的吗？交换机现在我还不知道是什么”")])]),v._v(" "),_("p",[v._v("笔记本不是交换机，交换机通常是 2 个网口以上。")]),v._v(" "),_("p",[v._v("现在家里的路由器其实有了交换机的功能了。交换机可以简单理解成一个设备，三台电脑网线接到这个设备，这三台电脑就可以互相通信了，交换机嘛，交换数据这么理解就可以。")]),v._v(" "),_("blockquote",[_("p",[v._v("读者问：“如果知道你电脑的 Mac 地址，我可以直接给你发消息吗？”")])]),v._v(" "),_("p",[v._v("Mac 地址只能是两个设备之间传递时使用的，如果你要从大老远给我发消息，是离不开 IP 的。")]),v._v(" "),_("blockquote",[_("p",[v._v("读者问：“请问公网服务器的 Mac 地址是在什么时机通过什么方式获取到的？我看 ARP 获取 Mac 地址只能获取到内网机器的 Mac 地址吧？”")])]),v._v(" "),_("p",[v._v("在发送数据包时，如果目标主机不是本地局域网，填入的 Mac 地址是路由器，也就是把数据包转发给路由器，路由器一直转发下一个路由器，直到转发到目标主机的路由器，发现 IP 地址是自己局域网内的主机，就会 ARP 请求获取目标主机的 Mac 地址，从而转发到这个服务器主机。")]),v._v(" "),_("p",[v._v("转发的过程中，源 IP 地址和目标 IP 地址是不会变的（前提：没有使用 NAT 网络的），源 MAC 地址和目标 MAC 地址是会变化的。")]),v._v(" "),_("hr"),v._v(" "),_("p",[v._v("哈喽，我是小林，就爱图解计算机基础，如果觉得文章对你有帮助，别忘记关注我哦！")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost2/%E5%85%B6%E4%BB%96/%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BB%8B%E7%BB%8D.png",alt:""}})])])}),[],!1,null,null,null);_.default=E.exports}}]);